---
enabled: true
name: fantomas
version: v3.3.0
include:
  - "**/*.fs"
  - "**/*.fsi"
  - "**/*.fsx"
supports_arg_sep: false
supports_multiple_paths: false
documentation:
  - "https://github.com/fsprojects/fantomas"
metadata:
  languages:
    - F#
  tests:
    - extension: fs
      contents: |
        type Type
            = TyLam of Type * Type
            | TyVar of string
            | TyCon of string * Type list
            with override this.ToString () =
                    match this with
                    | TyLam (t1, t2) -> sprintf "(%s -> %s)" (t1.ToString()) (t2.ToString())
                    | TyVar a -> a
                    | TyCon (s, ts) -> s
      restyled: |
        type Type =
            | TyLam of Type * Type
            | TyVar of string
            | TyCon of string * Type list
            override this.ToString() =
                match this with
                | TyLam(t1, t2) -> sprintf "(%s -> %s)" (t1.ToString()) (t2.ToString())
                | TyVar a -> a
                | TyCon(s, ts) -> s
    - extension: fs
      contents: |
        let Multiple9x9 () =
            for i in 1 .. 9 do
                printf "\n";
                for j in 1 .. 9 do
                    let k = i * j in
                    printf "%d x %d = %2d " i j k;
                done;
            done;;
        Multiple9x9 ();;
      restyled: |
        let Multiple9x9() =
            for i in 1 .. 9 do
                printf "\n"
                for j in 1 .. 9 do
                    let k = i * j
                    printf "%d x %d = %2d " i j k

        Multiple9x9()
