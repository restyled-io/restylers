---
enabled: true
name: dhall-format
version_cmd: |
  dhall --version
command:
  - dhall
arguments:
  - format
  - --inplace
supports_arg_sep: false
include:
  - "**/*.dhall"
documentation:
  - https://docs.dhall-lang.org
metadata:
  languages:
    - Dhall
  tests:
    - contents: |
        let Fruit_ = < Apple : {} | Banana : {} | Orange : {} >
        in let fruiteHandler_ =
                    { Apple = \(_ : {}) -> "Apple"
                    , Banana = \(_ : {}) -> "Banana"
                    , Orange = \(_ : {}) -> "Orange"
                    }
                in let f = { Fruit = Fruit_, fruitToText = \(f : Fruit_) -> merge fruiteHandler_ f }
                in let x = { fruit1 = f.fruitToText (f.Fruit.Apple {=}), fruit2 = f.fruitToText (f.Fruit.Banana {=}) }
                in x // { fruit1 = f.fruitToText (f.Fruit.Orange {=}) }

      restyled: |
        let Fruit_ = < Apple : {} | Banana : {} | Orange : {} >

        in  let fruiteHandler_ =
                  { Apple = λ(_ : {}) → "Apple"
                  , Banana = λ(_ : {}) → "Banana"
                  , Orange = λ(_ : {}) → "Orange"
                  }

            in  let f =
                      { Fruit = Fruit_
                      , fruitToText = λ(f : Fruit_) → merge fruiteHandler_ f
                      }

                in  let x =
                          { fruit1 = f.fruitToText (f.Fruit.Apple {=})
                          , fruit2 = f.fruitToText (f.Fruit.Banana {=})
                          }

                    in  x ⫽ { fruit1 = f.fruitToText (f.Fruit.Orange {=}) }
