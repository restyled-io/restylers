name: CI

on:
  pull_request:
  push:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_BUILD_SUMMARY: "false"
  DOCKER_BUILD_RECORD_UPLOAD: "false"
  LOG_COLOR: always

jobs:
  tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: stack
        uses: freckle/stack-action@v5
        with:
          working-directory: _tools
      - uses: actions/upload-artifact@v4
        with:
          name: tools
          path: ${{ steps.stack.outputs.local-install-root }}/bin/restylers
          if-no-files-found: error

  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            all: '**/*'
          list-files: shell

      - id: filtered
        name: Identify Restyler changes
        run: ./.github/bin/filter-changes ${{ steps.changes.outputs.all_files }}
    outputs:
      restylers: ${{ steps.filtered.outputs.restylers }}

  restylers:
    needs:
      - tools
      - changes
    if: ${{ needs.changes.outputs.restylers }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tools

      - name: Install tools
        run: |
          chmod +x ./restylers
          sudo mv -v restylers /usr/local/bin
          curl --proto '=https' --tlsv1.2 -sSf \
            https://raw.githubusercontent.com/restyled-io/restyler/main/install | sudo sh

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

        # Necessary if pushing, but best-effort if pulling (rate limits)
        continue-on-error: ${{ github.ref_name != 'main' }}

      # TODO: lint

      - name: "Build, test, and push (if main) sha-tagged images"
        run: >-
          restylers
          --sha ${{ github.sha }}
          --write tested.yaml
          ${{ github.ref_name == 'main' && '--push' || '' }}
          ${{ needs.changes.outputs.restylers }}

      - name: Build merged restylers.yaml
        run: |
          curl -sSf -L -o base.yaml \
            https://docs.restyled.io/data-files/restylers/manifests/dev/restylers.yaml

          ruby -r yaml > restylers.yaml <<'EOM'
          base = YAML.safe_load_file("./base.yaml")
          tested = YAML.safe_load_file("./tested.yaml")
          merged = base.map do |b|
            tested.find { _1.fetch("name") == b.fetch("name") } || b
          end
          puts YAML.dump(merged)
          EOM

          echo "::group::Merged manifest"
          cat restylers.yaml
          echo "::endgroup::"

      - uses: actions/upload-artifact@v4
        with:
          name: manifest
          path: restylers.yaml
          if-no-files-found: error

      - uses: restyled-io/actions/setup-demo@v3
      - uses: restyled-io/actions/setup@v3
      - uses: restyled-io/actions/run@v3
        with:
          paths: .
          manifest: ./restylers.yaml
          dry-run: true

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [restylers]

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - uses: actions/checkout@v4

      - id: tag
        name: Tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
          name: manifest

      - name: Release sha, versioned, and dev manifests
        run: |
          ./bin/promote ./restylers.yaml \
            "${{ github.sha }}" "${{ steps.tag.outputs.new_tag }}" "dev"

      - name: Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
