name: CI

on:
  pull_request:

  workflow_call:
    inputs:
      push:
        type: boolean
        description: To push built images or not
        default: false
    outputs:
      restylers:
        description: Changed restylers
        value: ${{ jobs.changes.outputs.restylers }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_BUILD_SUMMARY: "false"
  DOCKER_BUILD_RECORD_UPLOAD: "false"
  LOG_COLOR: always
  LOG_CONCURRENCY: 1
  LOG_BREAKPOINT: 200

jobs:
  tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: stack
        uses: freckle/stack-action@v5
        with:
          working-directory: _tools
      - uses: actions/upload-artifact@v5
        with:
          name: tools
          path: "${{ steps.stack.outputs.local-install-root }}/bin/*"
          if-no-files-found: error

  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 # need to get back to base

      - id: scopes
        name: Identify Restyler changes
        run: |
          base=${{ github.event.pull_request.base.sha }}
          base=${base:-${{ github.event.before }}}
          ./.github/bin/filter-scopes "$base" >>"$GITHUB_OUTPUT"
    outputs:
      restylers: ${{ steps.scopes.outputs.restylers }}

  restylers:
    needs:
      - tools
      - changes
    if: ${{ needs.changes.outputs.restylers }}

    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read
      id-token: write

    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v6
        with:
          name: tools

      - name: Install tools
        run: |
          chmod +x ./restylers
          sudo mv -v restylers /usr/local/bin
          curl --proto '=https' --tlsv1.2 -sSf \
            https://raw.githubusercontent.com/restyled-io/restyler/main/install | sudo sh

      - if: ${{ inputs.push }}
        name: AWS Login
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE }}

      - if: ${{ inputs.push }}
        name: Create ECR repositories if necessary
        run: |
          for name in ${{ needs.changes.outputs.restylers }}; do
            rname=restyler-$name

            if ! aws ecr-public describe-repositories --repository-names "$rname" &>/dev/null; then
              echo "Creating ECR repository for $rname"
              aws ecr-public create-repository --repository-name "$rname"
            fi
          done

      - if: ${{ inputs.push }}
        name: ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build${{ inputs.push && ', test, and push' || ' and test'}}
        run: >-
          restylers
          ${{ runner.debug && '--debug' || '' }}
          --write tested.yaml
          --no-pull
          ${{ inputs.push && '--push' || '' }}
          ${{ needs.changes.outputs.restylers }}

      - name: Build merged restylers.yaml
        run: |
          gh release download dev -p restylers.yaml
          mv -v restylers.yaml base.yaml

          ruby -r yaml > restylers.yaml <<'EOM'
          base = YAML.safe_load_file("./base.yaml")
          tested = YAML.safe_load_file("./tested.yaml")
          merged = [base, tested].flat_map do |y|
            y.map { _1.fetch("name") }
          end.sort.uniq.map do |name|
            tested.find { _1.fetch("name") == name } or
              base.find { _1.fetch("name") == name } or
              raise "impossible"
          end
          puts YAML.dump(merged)
          EOM

          echo "::group::Merged manifest"
          cat restylers.yaml
          echo "::endgroup::"

          echo "::group::Changes"
          diff -U 3 base.yaml restylers.yaml || true
          echo "::endgroup::"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Test manifest
      - uses: restyled-io/actions/setup-demo@v4
      - uses: restyled-io/actions/setup@v4
      - uses: restyled-io/actions/run@v4
        with:
          paths: .
          manifest: ./restylers.yaml
          dry-run: true

      - uses: actions/upload-artifact@v5
        with:
          name: manifest
          path: restylers.yaml
          if-no-files-found: error

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.restylers }}
    runs-on: ubuntu-latest
    steps:
      - id: prep
        run: |
          {
            printf 'dockerfiles='
            for restyler in ${{ needs.changes.outputs.restylers }}; do
              dockerfile="./$restyler/Dockerfile"

              # Won't exist in case of an override
              if [[ -f "$dockerfile" ]]; then
                printf '%s ' "$dockerfile"
              fi
            done
            echo
          } >>"$GITHUB_OUTPUT"

      - uses: actions/checkout@v5
      - if: ${{ steps.prep.outputs.dockerfiles }}
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: ${{ steps.prep.outputs.dockerfiles }}

  commitlint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 # need to get back to base
      - uses: actions/setup-node@v6
      - name: Install
        run: |
          npm install --save-dev @commitlint/cli
          npm install --save-dev @commitlint/config-conventional
      - name: Run
        run: |
          npx commitlint --from "$BASE_SHA" --to "$HEAD_SHA" --color
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
