name: CI

on:
  pull_request:
  push:
    branches: main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        restyler:
          - astyle
          - autopep8
          - black
          - brittany
          - clang-format
          - dfmt
          - dhall-format
          - dotnet-format
          - elm-format
          - fantomas
          - gn
          - gofmt
          - google-java-format
          - hindent
          - hlint
          - isort
          - jdt
          - jq
          - ormolu
          - pg_format
          - php-cs-fixer
          - prettier
          - prettier-ruby
          - reorder-python-imports
          - rubocop
          - rustfmt
          - shellharden
          - shfmt
          - standardrb
          - stylish-haskell
          - terraform
          - verible
          - yapf

        include:
          - restyler: prettier
            overrides: >-
              prettier-json
              prettier-markdown
              prettier-yaml

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - id: prep
        name: Prepare
        run: |
          image=restyled/restyler-${{ matrix.restyler }}:${{ github.sha }}
          echo "::set-output name=image::${image}"

      - name: Lint
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: ${{ matrix.restyler }}/Dockerfile
        continue-on-error: true

      - id: buildx
        name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.restyler }}-image-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.restyler }}-image-

      - name: Registry login
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.restyler }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          outputs: type=docker
          tags: ${{ steps.prep.outputs.image }}

      - name: Build and Push
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.restyler }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          push: true
          tags: ${{ steps.prep.outputs.image }}

      - name: Cache cleanup
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Container credentials
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          mkdir -p ~/work/_temp/_github_home/.docker
          cp ~/.docker/config.json ~/work/_temp/_github_home/.docker/config.json

      - name: Test
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: restyled-io/sdk@main
        with:
          command: >-
            restylers
            --sha ${{ github.sha }}
            --no-build
            --write restyler.yaml
            ${{ matrix.restyler }}
            ${{ matrix.overrides }}

      - name: Test and Push
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: restyled-io/sdk@main
        with:
          command: >-
            restylers
            --sha ${{ github.sha }}
            --no-build
            --push
            --write restyler.yaml
            ${{ matrix.restyler }}
            ${{ matrix.overrides }}

      - if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.restyler }}
          path: restyler.yaml

  test-external:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        restyler:
          - whitespace

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Test
        uses: restyled-io/sdk@main
        with:
          command: >-
            restylers
            --sha ${{ github.sha }}
            --no-build
            --write restyler.yaml
            ${{ matrix.restyler }}

      - if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.restyler }}
          path: restyler.yaml

  status:
    needs: [test, test-external]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Job to act as our overall required PR Status"

  promote:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test, test-external]

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - uses: actions/download-artifact@v2
      - name: Build manifest
        run: |
          cat **/*.yaml > restylers.yaml

      - name: Promote to sha tag
        uses: restyled-io/sdk@main
        with:
          command: >-
            promote --yes --no-test --file restylers.yaml ${{ github.sha }}

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [promote]

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - uses: actions/checkout@v2

      - id: tag
        name: Tag
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote to version tag
        uses: restyled-io/sdk@main
        with:
          command: >-
            promote --yes --no-test ${{ github.sha }} ${{ steps.tag.outputs.new_tag }}

      - name: Promote to dev
        uses: restyled-io/sdk@main
        with:
          command: >-
            promote --yes --no-test ${{ github.sha }} dev
